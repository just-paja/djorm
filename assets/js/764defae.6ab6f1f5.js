(self.webpackChunkdjorm_docs=self.webpackChunkdjorm_docs||[]).push([[113],{876:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return f}});var r=n(2784);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),f=o,m=u["".concat(l,".").concat(f)]||u[f]||p[f]||i;return n?r.createElement(m,a(a({ref:t},d),{},{components:n})):r.createElement(m,a({ref:t},d))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1331:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return c},default:function(){return p}});var r=n(7560),o=n(8283),i=(n(2784),n(876)),a=["components"],s={sidebar_position:3},l={unversionedId:"concepts/fields",id:"concepts/fields",isDocsHomePage:!1,title:"Fields",description:"Fields are specified as class attributes - static properties. Be careful not to choose field names that conflict with the models API like save, create or delete.",source:"@site/docs/concepts/fields.md",sourceDirName:"concepts",slug:"/concepts/fields",permalink:"/djorm/docs/concepts/fields",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/concepts/fields.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Models",permalink:"/djorm/docs/concepts/models"},next:{title:"Logger",permalink:"/djorm/docs/concepts/logger"}},c=[{value:"Field types",id:"field-types",children:[]},{value:"Field options",id:"field-options",children:[]}],d={toc:c};function p(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Fields are specified as class attributes - static properties. Be careful not to choose field names that conflict with the ",(0,i.kt)("a",{parentName:"p",href:"/docs/models/DatabaseModel"},"models API")," like ",(0,i.kt)("strong",{parentName:"p"},"save"),", ",(0,i.kt)("strong",{parentName:"p"},"create")," or ",(0,i.kt)("strong",{parentName:"p"},"delete"),"."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const { DatabaseModel } = require('djorm/models')\nconst { CharField } = require('djorm/fields/CharField')\nconst { DateField } = require('djorm/fields/DateField')\nconst { ForeignKey } = require('djorm/fields/ForeignKey')\nconst { PositiveIntegerField } = require('djorm/fields/PositiveIntegerField')\n\nclass Musician extends DatabaseModel {\n  id = new AutoField()\n  firstName = new CharField({ maxLength: 30 })\n  lastName = new CharField({ maxLength: 30 })\n  instrument = new CharField({ maxLength: 100 })\n}\n\nclass Album extends DatabaseModel {\n  artist = new ForeignKey({ model: 'Musician', onDelete: ForeignKey.CASCADE })\n  name = new CharField({ maxLength: 100 })\n  releaseDate = new DateField()\n  numStars = new PositiveIntegerField()\n}\n\nmodule.exports = { Musician, Album }\n")),(0,i.kt)("h2",{id:"field-types"},"Field types"),(0,i.kt)("p",null,"Each field in your model should be an instance of the appropriate ",(0,i.kt)("a",{parentName:"p",href:"/docs/models/fields/Field"},"Field class"),". Djorm uses the field class types to determine quite a few things:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The column type which tells the database what kind of data to store (e.g. INTEGER,VARCHAR,TEXT)"),(0,i.kt)("li",{parentName:"ul"},"The type validations")),(0,i.kt)("h2",{id:"field-options"},"Field options"),(0,i.kt)("p",null,"Each field takes a certain set of field-specific properties. For example ",(0,i.kt)("a",{parentName:"p",href:"/docs/models/fields/CharField"},"CharField")," requires maxLength."))}p.isMDXComponent=!0}}]);