(self.webpackChunkdjorm_docs=self.webpackChunkdjorm_docs||[]).push([[1807],{876:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(2784);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=r.createContext({}),s=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,d=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),p=s(n),f=o,m=p["".concat(d,".").concat(f)]||p[f]||u[f]||i;return n?r.createElement(m,l(l({ref:t},c),{},{components:n})):r.createElement(m,l({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=p;var a={};for(var d in t)hasOwnProperty.call(t,d)&&(a[d]=t[d]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5130:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},metadata:function(){return d},toc:function(){return s},default:function(){return u}});var r=n(7560),o=n(8283),i=(n(2784),n(876)),l=["components"],a={sidebar_position:6},d={unversionedId:"models/fields/Field",id:"models/fields/Field",isDocsHomePage:!1,title:"Field",description:"Djorm expects all fields to inherit from Field.",source:"@site/docs/models/fields/Field.md",sourceDirName:"models/fields",slug:"/models/fields/Field",permalink:"/djorm/docs/models/fields/Field",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/models/fields/Field.md",version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Object Manager",permalink:"/djorm/docs/models/ObjectManager"},next:{title:"BooleanField",permalink:"/djorm/docs/models/fields/BooleanField"}},s=[{value:"Field options",id:"field-options",children:[{value:"<code>null</code>",id:"null",children:[]},{value:"<code>choices</code>",id:"choices",children:[]},{value:"<code>default</code>",id:"default",children:[]}]}],c={toc:s};function u(e){var t=e.components,n=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Djorm expects all fields to inherit from ",(0,i.kt)("inlineCode",{parentName:"p"},"Field"),"."),(0,i.kt)("h2",{id:"field-options"},"Field options"),(0,i.kt)("p",null,"The following props are available to all field types. All are optional."),(0,i.kt)("h3",{id:"null"},(0,i.kt)("inlineCode",{parentName:"h3"},"null")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Field.null")),(0,i.kt)("p",null,"If ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", Djorm will store empty values as ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," in the database. Default is ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,i.kt)("p",null,"Avoid using ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," on string-based fields such as ",(0,i.kt)("a",{parentName:"p",href:"/djorm/docs/models/fields/CharField"},"CharField")," and ",(0,i.kt)("a",{parentName:"p",href:"/djorm/docs/models/fields/TextField"},"TextField"),". If a string-based field has ",(0,i.kt)("inlineCode",{parentName:"p"},"null:  true"),", that means it has two possible values for \u201cno data\u201d: ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),', and the empty string. In most cases, it\u2019s redundant to have two possible values for "no data;" the Djorm convention is to use the empty string, not ',(0,i.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,i.kt)("h3",{id:"choices"},(0,i.kt)("inlineCode",{parentName:"h3"},"choices")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Field.choices")),(0,i.kt)("p",null,"Either array of values or key-value pair object to use as choices for this field. If choices are given, they are enforced by model validation."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"new Field({\n  choices: ['CZ', 'SK']\n})\n")),(0,i.kt)("h3",{id:"default"},(0,i.kt)("inlineCode",{parentName:"h3"},"default")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Field.default")),(0,i.kt)("p",null,"The default value for this field. This can be either a value or a function. If it is a function, it will be called every time a new object is created."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"new Field({\n  default: 42\n})\n\nnew Field({\n  default: inst => `${inst.name} (Human)`\n})\n")))}u.isMDXComponent=!0}}]);