"use strict";(self.webpackChunkdjorm_docs=self.webpackChunkdjorm_docs||[]).push([[9283],{876:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>f});var n=a(2784);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(a),m=r,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return a?n.createElement(f,i(i({ref:t},d),{},{components:a})):n.createElement(f,i({ref:t},d))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2678:(e,t,a)=>{a.r(t),a.d(t,{default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=a(7896),r=(a(2784),a(876));const o={sidebar_position:2},i={unversionedId:"concepts/models",id:"concepts/models",isDocsHomePage:!1,title:"Models",description:"A model is the single, definitive source of information about your data. It contains the essential fields and behaviours of the data you're storing. Generally each models maps to a single database table. It is a class with fields that describe data you're storing in your database. You use models to abstract away the database specific code.",source:"@site/docs/concepts/models.md",sourceDirName:"concepts",slug:"/concepts/models",permalink:"/djorm/docs/concepts/models",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/concepts/models.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/djorm/docs/concepts/configuration"},next:{title:"Fields",permalink:"/djorm/docs/concepts/fields"}},l=[{value:"Define a model",id:"define-a-model",children:[]},{value:"Quick example",id:"quick-example",children:[{value:"Technical notes",id:"technical-notes",children:[]}]}],s={toc:l},c="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A model is the single, definitive source of information about your data. It contains the essential fields and behaviours of the data you're storing. Generally each models maps to a single database table. It is a class with fields that describe data you're storing in your database. You use models to abstract away the database specific code."),(0,r.kt)("h2",{id:"define-a-model"},"Define a model"),(0,r.kt)("p",null,"To define a model,"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"extend ",(0,r.kt)("a",{parentName:"li",href:"docs/models/DatabaseModel"},"djorm/models/DatabaseModel")),(0,r.kt)("li",{parentName:"ul"},"define fields"),(0,r.kt)("li",{parentName:"ul"},"register the model.")),(0,r.kt)("h2",{id:"quick-example"},"Quick example"),(0,r.kt)("p",null,"In this example we create a ",(0,r.kt)("strong",{parentName:"p"},"Person")," with ",(0,r.kt)("strong",{parentName:"p"},"firstName")," and ",(0,r.kt)("strong",{parentName:"p"},"lastName"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const { DatabaseModel } = require('djorm/models')\nconst { CharField } = require('djorm/fields/CharField')\n\nclass Person extends DatabaseModel {\n  id = new AutoField()\n  firstName = new CharField({ maxLength: 30 })\n  lastName = new CharField({ maxLength: 30 })\n}\n\nmodule.exports = { Person }\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Following will apply once the migrations feature is finished.")),(0,r.kt)("p",null,"The above ",(0,r.kt)("strong",{parentName:"p"},"Person")," model would create database table like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},'CREATE TABLE person (\n  "id" INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,\n  "firstName" VARCHAR(30) NOT NULL,\n  "lastName" VARCHAR(30) NOT NULL\n);\n')),(0,r.kt)("h3",{id:"technical-notes"},"Technical notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The table name is derived from the model name"),(0,r.kt)("li",{parentName:"ul"},"Unlike Django, the ",(0,r.kt)("strong",{parentName:"li"},"id")," field is not automatically added to the model"),(0,r.kt)("li",{parentName:"ul"},"The SQL is generated using MySQL driver. To use other drivers, configure your databases.")))}d.isMDXComponent=!0}}]);