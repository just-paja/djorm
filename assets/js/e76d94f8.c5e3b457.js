(self.webpackChunkdjorm_docs=self.webpackChunkdjorm_docs||[]).push([[9283],{876:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(2784);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2678:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var r=n(7560),a=n(8283),o=(n(2784),n(876)),i=["components"],l={sidebar_position:2},s={unversionedId:"concepts/models",id:"concepts/models",isDocsHomePage:!1,title:"Models",description:"A model represents a database entity. It is a class with fields that describe data you're storing in your database. You use models to abstract away the database specific code.",source:"@site/docs/concepts/models.md",sourceDirName:"concepts",slug:"/concepts/models",permalink:"/djorm/docs/concepts/models",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/concepts/models.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/djorm/docs/concepts/configuration"},next:{title:"Fields",permalink:"/djorm/docs/concepts/fields"}},c=[{value:"Define a model",id:"define-a-model",children:[]},{value:"Quick example",id:"quick-example",children:[{value:"Technical notes",id:"technical-notes",children:[]}]}],d={toc:c};function u(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"A model represents a database entity. It is a class with fields that describe data you're storing in your database. You use models to abstract away the database specific code."),(0,o.kt)("h2",{id:"define-a-model"},"Define a model"),(0,o.kt)("p",null,"To define a model,"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"extend ",(0,o.kt)("a",{parentName:"li",href:"docs/models/DatabaseModel"},"djorm/models/DatabaseModel")),(0,o.kt)("li",{parentName:"ul"},"define fields"),(0,o.kt)("li",{parentName:"ul"},"register the model.")),(0,o.kt)("h2",{id:"quick-example"},"Quick example"),(0,o.kt)("p",null,"In this example we create a ",(0,o.kt)("strong",{parentName:"p"},"Person")," with ",(0,o.kt)("strong",{parentName:"p"},"firstName")," and ",(0,o.kt)("strong",{parentName:"p"},"lastName"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const { DatabaseModel } = require('djorm/models')\nconst { CharField } = require('djorm/fields/CharField')\n\nclass Person extends DatabaseModel {\n  id = new AutoField()\n  firstName = new CharField({ maxLength: 30 })\n  lastName = new CharField({ maxLength: 30 })\n}\n\nmodule.exports = { Person }\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Following will apply once the migrations feature is finished.")),(0,o.kt)("p",null,"The above ",(0,o.kt)("strong",{parentName:"p"},"Person")," model would create database table like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},'CREATE TABLE person (\n  "id" INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,\n  "firstName" VARCHAR(30) NOT NULL,\n  "lastName" VARCHAR(30) NOT NULL\n);\n')),(0,o.kt)("h3",{id:"technical-notes"},"Technical notes"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The table name is derived from the model name"),(0,o.kt)("li",{parentName:"ul"},"Unlike Django, the ",(0,o.kt)("strong",{parentName:"li"},"id")," field is not automatically added to the model"),(0,o.kt)("li",{parentName:"ul"},"The SQL is generated using MySQL driver. To use other drivers, configure your databases.")))}u.isMDXComponent=!0}}]);